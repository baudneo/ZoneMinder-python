from dataclasses import dataclass, field
from typing import Optional

from sqlalchemy import Table, Enum, DateTime


@dataclass
class ZMEvent:
    """A dataclass to hold ZoneMinder Event data - matches DB Column Names"""
    Id: int = field(default_factory=int)
    MonitorId: int = field(default_factory=int)
    StorageId: int = field(default_factory=int)
    SecondaryStorageId: int = field(default_factory=int)
    Name: str = field(default_factory=str)
    Cause: str = field(default_factory=str)
    StartDateTime: DateTime = field(default_factory=DateTime)
    EndDateTime: DateTime = field(default_factory=DateTime)
    Width: int = field(default_factory=int)
    Height: int = field(default_factory=int)
    Length: float = field(default_factory=float)
    Frames: int = field(default_factory=int)
    AlarmFrames: int = field(default_factory=int)
    DefaultVideo: str = field(default_factory=str)
    SaveJPEGs: int = field(default_factory=int)
    TotScore: int = field(default_factory=int)
    AvgScore: int = field(default_factory=int)
    MaxScore: int = field(default_factory=int)
    Archived: int = field(default_factory=int)
    Videoed: int = field(default_factory=int)
    Uploaded: int = field(default_factory=int)
    Emailed: int = field(default_factory=int)
    Messaged: int = field(default_factory=int)
    Executed: int = field(default_factory=int)
    Notes: str = field(default_factory=str)
    StateId: int = field(default_factory=int)
    Orientation: Enum = field(default_factory=Enum)
    DiskSpace: int = field(default_factory=int)
    Scheme: Enum = field(default_factory=Enum)
    Locked: int = field(default_factory=int)
    
    
@dataclass
class ZMDB:
    Events: Optional[Table] = field(default_factory=Table)
    Monitors: Optional[Table] = field(default_factory=Table)
    Config: Optional[Table] = field(default_factory=Table)
    ControlPresets: Optional[Table] = field(default_factory=Table)
    Controls: Optional[Table] = field(default_factory=Table)
    Devices: Optional[Table] = field(default_factory=Table)
    Event_Summaries: Optional[Table] = field(default_factory=Table)
    Events_Archived: Optional[Table] = field(default_factory=Table)
    Events_Day: Optional[Table] = field(default_factory=Table)
    Events_Hour: Optional[Table] = field(default_factory=Table)
    Events_Week: Optional[Table] = field(default_factory=Table)
    Events_Month: Optional[Table] = field(default_factory=Table)
    Filters: Optional[Table] = field(default_factory=Table)
    Frames: Optional[Table] = field(default_factory=Table)
    Groups: Optional[Table] = field(default_factory=Table)
    Groups_Monitors: Optional[Table] = field(default_factory=Table)
    Logs: Optional[Table] = field(default_factory=Table)
    Manufacturers: Optional[Table] = field(default_factory=Table)
    Maps: Optional[Table] = field(default_factory=Table)
    Models: Optional[Table] = field(default_factory=Table)
    MonitorPresets: Optional[Table] = field(default_factory=Table)
    Monitor_Status: Optional[Table] = field(default_factory=Table)
    MontageLayouts: Optional[Table] = field(default_factory=Table)
    Servers: Optional[Table] = field(default_factory=Table)
    Sessions: Optional[Table] = field(default_factory=Table)
    Snapshot_Events: Optional[Table] = field(default_factory=Table)
    Snapshots: Optional[Table] = field(default_factory=Table)
    States: Optional[Table] = field(default_factory=Table)
    Stats: Optional[Table] = field(default_factory=Table)
    Storage: Optional[Table] = field(default_factory=Table)
    TriggersX10: Optional[Table] = field(default_factory=Table)
    Users: Optional[Table] = field(default_factory=Table)
    ZonePresets: Optional[Table] = field(default_factory=Table)
    Zones: Optional[Table] = field(default_factory=Table)
